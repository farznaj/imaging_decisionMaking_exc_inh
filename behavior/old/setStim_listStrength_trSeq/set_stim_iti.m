% geenrate the stimulus using ITIs that are generated from a poisson distribution
% script set_stim does the same, but it generates the array of events generated by poisson process.
% this scrip is slower than set_stim


visdur = 600;
evnum = 20; 8; % 600ms stim: 8-17; 1000ms: 10-24 (?)

evdur = 10;
gapdur = 15; 

evdur_temp = 1; % event duration in ms
% visdur_temp = visdur - evnum*(evdur-evdur_temp); % 600; % value(WaitDuration) % length of visual stimulation in ms.
visdur_temp = visdur - evnum*(evdur+gapdur-evdur_temp);

mu = evnum/visdur_temp;
mu_rand = 1/mu;

%%
tic
ieis_all = {};
for iit = 1:1E1%:1E2

itis = exprnd(mu_rand, 1, 1E3);
% figure; hist(itis, 30)

%{
itis(itis<gapdur) = [];
figure; hist(itis, 30)

max_gap = visdur_temp - (evnum*evdur_temp + (evnum-1)*gapdur) + gapdur;
itis(itis>max_gap) = [];
% figure; hist(itis, 30)
%}

sum_itis = visdur_temp - evnum*evdur_temp;
s_ritis = sum_itis+1;
while s_ritis>sum_itis
    rand_itis = randi(length(itis),1,evnum-1); 
    s_ritis = sum(itis(rand_itis));
end
% s_ritis
itis_final = round(itis(rand_itis));
itis_final = [itis_final sum_itis - sum(itis_final)];

itis_final = itis_final+gapdur;

%%
flash = ones(1,evdur);
vis_stim = ones(1,evdur);

for iiti = 1:length(itis_final)
    vis_stim = [vis_stim, zeros(1, itis_final(iiti)), flash];
end
vis_stim(visdur+1:end) = [];

numev_all = sum(diff([0 vis_stim 0])==-1);

ieis_all{iit} = itis_final;

t(iit) = toc;

end
figure; 
plot(vis_stim)
title([numev_all max(itis_final)])




% figure; 
% subplot(211), hist(cell2mat(ieis_all),50)
% subplot(212),  hist(cell2mat(cellfun(@(x)x(1:end-1), ieis_all,'uniformoutput',0)),50)

figure; 
subplot(211), 
[n,v] = hist(cell2mat(ieis_all),50);
n = n/sum(n);
plot(v,n)

subplot(212),  
[n,v] = hist(cell2mat(cellfun(@(x)x(1:end-1), ieis_all,'uniformoutput',0)),50);
n = n/sum(n);
plot(v,n)

